Quick setup when using Angular
Install Java 8 from the Oracle website.
Install Node.js from the Node.js website (prefer an LTS version)
Install Yarn from the Yarn website
If you want to use the JHipster Marketplace, install Yeoman: yarn global add yo
Install JHipster: yarn global add generator-jhipster
Now that JHipster is installed, your next step is to create an application

Quick setup when using AngularJS 1.x
Install Java 8 from the Oracle website.
Install Node.js from the Node.js website (prefer an LTS version)
Install Yarn from the Yarn website
Install Bower: yarn global add bower
Install Gulp: yarn global add gulp-cli
If you want to use the JHipster Marketplace, install Yeoman: yarn global add yo
Install JHipster: yarn global add generator-jhipster
Now that JHipster is installed, your next step is to create an application


或者用yoman
This is the same procedure as using Yarn, with two differences:
Instead of installing Yarn in step 3, update NPM: npm install -g npm
Use npm install -g instead of yarn global add, for example:
To install Yeoman, type: npm install -g yo
To install JHipster, type: npm install -g generator-jhipster
You can find more information in the NPM documentation.
 
 创建项目
 mkdir myapp
 cd myapp
 jhipster
 
然后执行 jhipster 根据需求选择想要的额内容

--------------------------------------------------------------
创建数据实体
1.使用命令单独创建
The “entity” sub-generator will create all the necessary files, and provide a CRUD front-end for each entity (see project structure http://www.jhipster.tech/using-angularjs/ ). The sub generator can be invoked by running jhipster entity <entityName> --[options]. Reference for those options can be found by typing jhipster entity --help

Below are the supported options.
--table-name <table_name> - By default JHipster will generate a table name based on your entity name, if you would like to have a different table name you can do so by passing this option.
--angular-suffix <suffix> - If you want all your Angular routes to have a custom suffix you can pass that using this option.
--regenerate - This will regenerate an existing entity without asking any questions.
--skip-server - This will skip the server-side code and will generate only the client-side code.
--skip-client - This will skip the client-side code and will generate only the server-side code.
--db - Specify the database when skipping server side generation, has no effect otherwise.


2. 使用jhipster-jdl  http://www.jhipster.tech/jdl-studio/ 在线创建，生成jhl文件，然后执行 jhipster import-jdl ./my-jdl-file.jdl 会生成所有相关文件
语法详见 http://www.jhipster.tech/jdl/
You can generate entities from a JDL file using the import-jdl sub-generator, by running jhipster import-jdl your-jdl-file.jh.

If you do not want to regenerate your entities, while importing a JDL, you can use the --json-only flag to skip entity creation part and create only the json files in .jhipster folder.
	jhipster import-jdl ./my-jdl-file.jdl --json-only
By default import-jdl regenerates only entities which have changed, if you want all your entities to be regenerated then pass in the --force flag. Please note that this will overwrite all your local changes to the entity files
	jhipster import-jdl ./my-jdl-file.jdl --force
If you want to use JHipster UML instead of the import-jdl sub-generator, you need to install it by running npm install -g jhipster-uml, and then run jhipster-uml yourFileName.jh.
